service: order-processing-service

frameworkVersion: "3"

plugins:
  - serverless-step-functions

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-2
  eventBridge:
    useCloudFormation: true

  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "*"

functions:
  taskTokenResponseHandler:
    name: task-token-response-handler
    handler: taskTokenResponseHandler.default
    events:
      - eventBridge:
          eventBus: arn:aws:events:eu-west-2:xxx:event-bus/loyalty-event-bus
          pattern:
            detail:
              metadata:
                domain:
                  - "LEGO-LOYALTY"
                service:
                  - "loyalty-vendor-mediator"

stepFunctions:
  stateMachines:
    order-processing-stepfn:
      name: order-processing-stepfn
      definition:
        Comment: "Step function to process and order"
        StartAt: UpdateRewards
        States:
          UpdateRewards:
            Comment: Dispatch Task Token to update rewards
            Type: Task
            Resource: "arn:aws:states:::events:putEvents.waitForTaskToken"
            Parameters:
              Entries:
                - Detail:
                    data.$: $
                    metadata:
                      domain: "LEGO-LOYALTY"
                      service: "loyalty-order-processing"
                      category: "task-status"
                      type: "customer-rewards"
                      status: "processed"
                    TaskToken.$: $$.Task.Token
                  DetailType: event
                  EventBusName: loyalty-event-bus
                  Source: loyalty-order-processing
            ResultPath: "$.taskresult"
            Next: UpdateTable
          UpdateTable:
            Comment: Update order processing dynamoDB table
            Type: Task
            Resource: "arn:aws:states:::dynamodb:updateItem"
            Parameters:
              TableName: order-processing-table
              Key:
                pk.$: "$.loyalty_reward_reference"
              UpdateExpression: "set #status = :statusVal"
              ExpressionAttributeNames:
                "#status": "saleStatus"
              ExpressionAttributeValues:
                ":statusVal": "SUBMITTED"
              ReturnValues: "UPDATED_NEW"
            ResultPath: null
            End: true
